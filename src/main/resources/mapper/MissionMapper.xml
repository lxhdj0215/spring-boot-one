<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxhdj.dao.mapper.MissionMapper">
  <resultMap id="BaseResultMap" type="com.lxhdj.dao.model.Mission">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="business_type" jdbcType="INTEGER" property="businessType" />
    <result column="mission_type" jdbcType="BIGINT" property="missionType" />
    <result column="mission_type_l2" jdbcType="BIGINT" property="missionTypeL2" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_mis_code" jdbcType="VARCHAR" property="createMisCode" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="update_mis_code" jdbcType="VARCHAR" property="updateMisCode" />
    <result column="utime" jdbcType="TIMESTAMP" property="utime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="create_mis_name" jdbcType="VARCHAR" property="createMisName" />
    <result column="mission_object_type" jdbcType="INTEGER" property="missionObjectType" />
    <result column="collection_type" jdbcType="INTEGER" property="collectionType" />
    <result column="quota_type" jdbcType="INTEGER" property="quotaType" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="mission_monitor_type" jdbcType="INTEGER" property="missionMonitorType" />
    <result column="predict_process_rate" jdbcType="INTEGER" property="predictProcessRate" />
    <result column="show_finish_view_type" jdbcType="INTEGER" property="showFinishViewType" />
    <result column="bd_transfer" jdbcType="INTEGER" property="bdTransfer" />
    <result column="plan_id" jdbcType="BIGINT" property="planId" />
    <result column="min_process_threshold" jdbcType="INTEGER" property="minProcessThreshold" />
    <result column="strategy_id" jdbcType="BIGINT" property="strategyId" />
    <result column="min_quota_threshold" jdbcType="INTEGER" property="minQuotaThreshold" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, name, business_type, mission_type, mission_type_l2, start_time, end_time, finish_time, 
    status, create_mis_code, ctime, update_mis_code, utime, remark, sort_order, create_mis_name, 
    mission_object_type, collection_type, quota_type, tags, priority, mission_monitor_type, 
    predict_process_rate, show_finish_view_type, bd_transfer, plan_id, min_process_threshold, 
    strategy_id, min_quota_threshold
  </sql>
  <select id="selectByExample" parameterType="com.lxhdj.dao.model.MissionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lxhdj.dao.model.MissionExample">
    <!--
      WARNING - @mbg.generated
    -->
    delete from mission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lxhdj.dao.model.MissionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from mission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update mission
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.businessType != null">
        business_type = #{record.businessType,jdbcType=INTEGER},
      </if>
      <if test="record.missionType != null">
        mission_type = #{record.missionType,jdbcType=BIGINT},
      </if>
      <if test="record.missionTypeL2 != null">
        mission_type_l2 = #{record.missionTypeL2,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createMisCode != null">
        create_mis_code = #{record.createMisCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateMisCode != null">
        update_mis_code = #{record.updateMisCode,jdbcType=VARCHAR},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createMisName != null">
        create_mis_name = #{record.createMisName,jdbcType=VARCHAR},
      </if>
      <if test="record.missionObjectType != null">
        mission_object_type = #{record.missionObjectType,jdbcType=INTEGER},
      </if>
      <if test="record.collectionType != null">
        collection_type = #{record.collectionType,jdbcType=INTEGER},
      </if>
      <if test="record.quotaType != null">
        quota_type = #{record.quotaType,jdbcType=INTEGER},
      </if>
      <if test="record.tags != null">
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.missionMonitorType != null">
        mission_monitor_type = #{record.missionMonitorType,jdbcType=INTEGER},
      </if>
      <if test="record.predictProcessRate != null">
        predict_process_rate = #{record.predictProcessRate,jdbcType=INTEGER},
      </if>
      <if test="record.showFinishViewType != null">
        show_finish_view_type = #{record.showFinishViewType,jdbcType=INTEGER},
      </if>
      <if test="record.bdTransfer != null">
        bd_transfer = #{record.bdTransfer,jdbcType=INTEGER},
      </if>
      <if test="record.planId != null">
        plan_id = #{record.planId,jdbcType=BIGINT},
      </if>
      <if test="record.minProcessThreshold != null">
        min_process_threshold = #{record.minProcessThreshold,jdbcType=INTEGER},
      </if>
      <if test="record.strategyId != null">
        strategy_id = #{record.strategyId,jdbcType=BIGINT},
      </if>
      <if test="record.minQuotaThreshold != null">
        min_quota_threshold = #{record.minQuotaThreshold,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update mission
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      business_type = #{record.businessType,jdbcType=INTEGER},
      mission_type = #{record.missionType,jdbcType=BIGINT},
      mission_type_l2 = #{record.missionTypeL2,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      create_mis_code = #{record.createMisCode,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=TIMESTAMP},
      update_mis_code = #{record.updateMisCode,jdbcType=VARCHAR},
      utime = #{record.utime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      create_mis_name = #{record.createMisName,jdbcType=VARCHAR},
      mission_object_type = #{record.missionObjectType,jdbcType=INTEGER},
      collection_type = #{record.collectionType,jdbcType=INTEGER},
      quota_type = #{record.quotaType,jdbcType=INTEGER},
      tags = #{record.tags,jdbcType=VARCHAR},
      priority = #{record.priority,jdbcType=INTEGER},
      mission_monitor_type = #{record.missionMonitorType,jdbcType=INTEGER},
      predict_process_rate = #{record.predictProcessRate,jdbcType=INTEGER},
      show_finish_view_type = #{record.showFinishViewType,jdbcType=INTEGER},
      bd_transfer = #{record.bdTransfer,jdbcType=INTEGER},
      plan_id = #{record.planId,jdbcType=BIGINT},
      min_process_threshold = #{record.minProcessThreshold,jdbcType=INTEGER},
      strategy_id = #{record.strategyId,jdbcType=BIGINT},
      min_quota_threshold = #{record.minQuotaThreshold,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>